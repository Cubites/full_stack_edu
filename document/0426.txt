* 자식 component에서 부모 component로 수정 요청을 보내는 방법(props는 수정이 불가능하므로 별도의 기능 필요)
- setState : class에서 사용
- useState : js 6에서 추가된 hook의 기능, function에서 사용

* hook이 나오게된 배경
-> React (생명주기) -> lift cycle (class 기반) 
* 실행 순서
1. Mounting (Dom에 요소를 붙이는 작업)
    1) constructor() -- 선택
    2) getDrivedStateFromProps() -- 선택
    3) render() -- *필수*
    4) componentDidMount() -- 선택
2. Updating
    1) getDrivedStateFromProps()
    2) shouldComponentUpdate()
    3) render() - *필수*
    4) getSnapshotBeforeUpdate()
    5) componentDidUpdate() 
3. Unmounting
    1) componentWillUnmount(); (컴포넌트가 Dom에서 제거될 때 호출)

* hook 함수
- useState('원소', 업데이트함수)
- useEffect( ( ) => { }, [value] )
	- Mount, Update, Unmount 할 때 실행 됨
	- 인자를 두 개 받을 수 있음
	- 첫번째 인자로 콜백함수(다른 함수의 인자로 전달된 함수)를 받음
	- 두번째 인자(선택)로 배열을 받을 수 있음 <-- dependency array
		- 값이 있는 경우( [value] ) : 값이 업데이트 될 때만 실행
		- 값이 없는 경우( [] ) : 최초 한번만 실행
		- 인자가 없는 경우( ) : 렌더링 될 때마다 실행
	- useEffect는 렌더링할 때마다 실행, value값이 바뀔 때만 실행, 빈 배열 전달 시 처음 한번만 실행
- useEffect( 
	()=>{ ...작업 }
	return ()=>{ ...작업중지 }

* console.log가 2번 출력되는 이유 : index.js에서 React.StrictMode에서 한번 더 렌더링되기 때문(지우면 해결됨)